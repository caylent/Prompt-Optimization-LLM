AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Sample SAM Template for prompt-optimize

Parameters:
  S3bucket: 
    Type: String
    Description: S3 bucket where data is located
    Default: 131578276461-us-east-1-secure-mlops
  Filekey:
    Type: String
    Description: the file path for the sample data
    Default: train.json

Resources:
  PromptAgentFunction:
    Type: AWS::Serverless::Function 
    Properties:
      PackageType: Image
      Architectures:
        - x86_64
      MemorySize: 250
      Timeout: 900
      Policies: arn:aws:iam::aws:policy/AdministratorAccess
      Environment:
        Variables:
          S3bucket: !Ref S3bucket
          Filekey: !Ref Filekey
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./agent
      DockerTag: bedrock-claude-agent

  AmazonBedrockPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          Effect: Allow
          Action: bedrock:*
          Resource: '*'

  BedrockExecutionRoleForAgents:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: bedrock.amazonaws.com
          Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
        - !Ref AmazonBedrockPolicy
      RoleName: 'AmazonBedrockExecutionRoleForAgents_PromptOptimization'

  LambdaResourcePolicy:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt PromptAgentFunction.Arn
      Principal: bedrock.amazonaws.com
      SourceAccount: !Sub ${AWS::AccountId}
      SourceArn: !Sub arn:aws:bedrock:${AWS::Region}:${AWS::AccountId}:agent/*

Outputs:
  BedrockAgentFunction:
    Description: "Action Group Lambda Function ARN"
    Value: !GetAtt PromptAgentFunction.Arn
